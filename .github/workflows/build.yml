name: Build

on:
  push:
    branches: main
  pull_request:
    branches: main

concurrency:
  # Cancel any workflow currently in progress for the same PR.
  # Allow running concurrently with any other commits.
  group: build-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build:
    name: Build
    permissions:
      # required for all workflows
      security-events: write
      # required to fetch internal or private CodeQL packs
      packages: read
      # only required for workflows in private repositories
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]
        tls: [schannel, quictls]
        link: [static, shared]
        config: [Debug, Release]
        exclude:
        - os: ubuntu
          tls: schannel
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 15
    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        submodules: 'recursive'
    - name: Install Perl
      if: runner.os == 'Windows'
      uses: shogo82148/actions-setup-perl@22423f01bde48fb88785c007e3166fbbbd8e892a
      with:
        perl-version: '5.34'
    - name: Install NASM
      if: runner.os == 'Windows'
      uses: ilammy/setup-nasm@72793074d3c8cdda771dba85f6deafe00623038b
    - name: Install libnuma-dev
      if: runner.os == 'Ubuntu'
      run: sudo apt-get install -y libnuma-dev
    - name: Initialize CodeQL
      if: ${{ (matrix.os == 'ubuntu') && (matrix.tls == 'quictls') && (matrix.link == 'shared')  && (matrix.config == 'Release') }}
      uses: github/codeql-action/init@51f77329afa6477de8c49fc9c7046c15b9a4e79d
      with:
        languages: c-cpp
        build-mode: manual
        config: |
          queries:
            - uses: security-and-quality # (very verbose)
          query-filters:
            - exclude:
                id: cpp/loop-variable-changed
            - exclude:
                id: cpp/include-non-header
    - name: Build
      shell: pwsh
      run: ./.github/workflows/build.ps1 -Config ${{ matrix.config }} -Tls ${{ matrix.tls }} -Link ${{ matrix.link }} -BuildId ${{ github.run_number }} -Suffix "-official" -WithTests -WithTools -WithPing -Debug
    - name: Perform CodeQL Analysis
      if: ${{ (matrix.os == 'ubuntu') && (matrix.tls == 'quictls') && (matrix.link == 'shared')  && (matrix.config == 'Release') }}
      uses: github/codeql-action/analyze@51f77329afa6477de8c49fc9c7046c15b9a4e79d
      with:
        category: "/language:c-cpp"
        output: sarif-results
        upload: failure-only
    - name: Filter SARIF
      if: ${{ (matrix.os == 'ubuntu') && (matrix.tls == 'quictls') && (matrix.link == 'shared')  && (matrix.config == 'Release') }}
      uses: advanced-security/filter-sarif@f3b8118a9349d88f7b1c0c488476411145b6270d
      with:
        patterns: |
          -build/**/*
          -ls-qpack/**/*
          -msquic/**/*
          -test/**/*
        input: sarif-results/cpp.sarif
        output: sarif-results/cpp.sarif
    - name: Upload SARIF
      if: ${{ (matrix.os == 'ubuntu') && (matrix.tls == 'quictls') && (matrix.link == 'shared')  && (matrix.config == 'Release') }}
      uses: github/codeql-action/upload-sarif@51f77329afa6477de8c49fc9c7046c15b9a4e79d
      with:
        sarif_file: sarif-results/cpp.sarif
    - name: Upload SARIF to Artifacts
      if: ${{ (matrix.os == 'ubuntu') && (matrix.tls == 'quictls') && (matrix.link == 'shared')  && (matrix.config == 'Release') }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: sarif-results
        path: sarif-results
    - name: Upload
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: bin-${{ matrix.os }}-${{ matrix.tls }}-${{ matrix.link }}-${{ matrix.config }}
        path: |
          artifacts/*.dll
          artifacts/*.exe
          artifacts/*.pdb
          artifacts/*.so
          artifacts/msh3app
          artifacts/msh3test
          artifacts/h3ping
    - name: msh3app
      run: |
        ./artifacts/msh3app outlook.office.com
        ./artifacts/msh3app www.cloudflare.com
        ./artifacts/msh3app www.google.com
      timeout-minutes: 1
    - name: h3ping
      run: |
        ./artifacts/h3ping outlook.office.com || true
        ./artifacts/h3ping www.cloudflare.com || true
        ./artifacts/h3ping www.google.com || true
      timeout-minutes: 1
    - name: h3ping (dynamic)
      run: |
        ./artifacts/h3ping outlook.office.com -d || true
        ./artifacts/h3ping www.cloudflare.com -d || true
        ./artifacts/h3ping www.google.com -d || true
      timeout-minutes: 1
    - name: msh3test
      run: ./artifacts/msh3test -v
      timeout-minutes: 1
  all-done:
    name: Build Complete
    if: always()
    needs: [build]
    runs-on: ubuntu-latest
    permissions: {} # No need for any permissions.
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe
      with:
        jobs: ${{ toJSON(needs) }}
